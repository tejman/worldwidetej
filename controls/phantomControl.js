// Generated by CoffeeScript 1.6.3
(function() {
  var binPath, childProcess, pageImageModel, path, phantomjs;

  path = require("path");

  childProcess = require("child_process");

  phantomjs = require("phantomjs");

  binPath = phantomjs.path;

  pageImageModel = require("../models/pageImageModel.js");

  module.exports = {
    getDataUrl: function(req, res) {
      var count, dataUrlArray, runPhantom, url, urlArray, _i, _len;
      console.log("route triggered");
      urlArray = JSON.parse(req.query.urls);
      count = 0;
      dataUrlArray = [];
      runPhantom = function(i, url) {
        var childArgs;
        console.log("find in db: ", url, "result: ", pageImageModel.findOne({
          pageUrl: url
        }));
        if (pageImageModel.findOne({
          pageUrl: url
        }) === !null) {
          console.log("found item in db: ", pageImageModel.findOne({
            pageUrl: url
          }));
          dataUrlArray[i] = pageImageModel.find({
            pageUrl: url
          });
          count++;
          if (count === urlArray.length) {
            res.send(dataUrlArray);
          }
        }
        childArgs = [path.join(__dirname, "test.js"), url];
        return childProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {
          var newDoc;
          console.log("child process spawn");
          count++;
          dataUrlArray[i] = stdout;
          console.log("before save", stdout.slice(0, 50));
          newDoc = new pageImageModel({
            pageUrl: url,
            dataUrl: stdout
          });
          console.log("mongo doc:   ", newDoc);
          newDoc.save();
          console.log("Start of print ---------------", i, dataUrlArray);
          if (count === urlArray.length) {
            res.send(dataUrlArray);
          }
          return false;
        });
      };
      for (_i = 0, _len = urlArray.length; _i < _len; _i++) {
        url = urlArray[_i];
        runPhantom(_i, url);
      }
      return false;
    }
  };

}).call(this);
